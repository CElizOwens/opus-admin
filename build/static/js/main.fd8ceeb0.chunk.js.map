{"version":3,"sources":["Components/Home.js","auth/index.js","Components/Login.js","Components/PrivateRoute.js","Components/Secret.js","icons8-refresh.gif","Components/LoadingBox.js","Components/MessageBox.js","Components/Toggles.js","Components/PerformanceForm.js","Components/Performances.js","Components/ProgramForm.js","Components/Programs.js","Components/Repertoire.js","Components/VenueForm.js","Components/Venues.js","Components/Finalize.js","Components/Invite.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useEffect","fetch","then","resp","json","console","log","createAuthProvider","accessTokenKey","onUpdateToken","token","method","body","access_token","r","useAuth","authFetch","login","logout","Login","useForm","register","handleSubmit","errors","reset","logged","className","onClick","onSubmit","data","opts","username","email","password","JSON","stringify","htmlFor","type","name","autoComplete","ref","required","pattern","value","message","minLength","PrivateRoute","Component","component","rest","render","props","to","Secret","useState","setMessage","response","status","LoadingBox","src","spinner","alt","MessageBox","variant","Opener","toggle","text","Closer","PerformanceForm","event_id","performanceFormSubmit","compOptions","needForm","setNeedForm","compRep","setCompRep","a","res","handleToggle","defaultValue","id","onChange","e","preventDefault","getCompRep","target","map","piece","title","Performances","perfs","performances","performance","index","notes","ProgramForm","programFormSubmit","venues","setVenues","getVenues","venue","Programs","programs","setPrograms","submitPerfBool","setSubmitPerfBool","loading","setLoading","error","setError","program_id","useRef","compOpts","handlePerformanceFormSubmit","headers","current","catch","err","getPrograms","useCallback","prog","document","getElementById","querySelector","scrollIntoView","behavior","block","dLen","Object","keys","length","push","slice","composer","getComposers","program","event","day_time","Repertoire","rep","setRep","getRep","Form","venueFormSubmit","Venues","submitVenBool","setSubmitVenBool","href","link","rel","address","Finalize","watch","URLSearchParams","useLocation","search","get","emailAddress","registered","setRegistered","finalized","setFinalized","finalized_token","Authorization","ok","res_json","hidden","readOnly","validate","password_repeat","Invite","sent","roles","placeholder","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"4PAEe,SAASA,IAMtB,OALAC,qBAAU,WACRC,MAAM,QACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GAAD,OAAUE,QAAQC,IAAIH,QAC7B,IACI,2C,sBCN0CI,6BAAmB,CACpEC,eAAgB,eAChBC,cAAe,SAACC,GAAD,OACbT,MAAM,eAAgB,CACpBU,OAAQ,OACRC,KAAMF,EAAMG,eACXX,MAAK,SAACY,GAAD,OAAOA,EAAEV,a,mBANPW,E,KAASC,E,KAAWC,E,KAAOC,E,KCE1B,SAASC,IAAS,IAAD,EACoBC,cAA1CC,EADsB,EACtBA,SAAUC,EADY,EACZA,aAAcC,EADF,EACEA,OAAQC,EADV,EACUA,MADV,EAEbT,IAAVU,EAFuB,oBA2B9B,OACE,mCACIA,EAqDA,gCACE,oBAAIC,UAAU,oBAAd,gCACA,yBAASA,UAAU,cAAnB,SACE,wBAAQC,QAAS,kBAAMT,KAAvB,kCAvDJ,gCACE,oBAAIQ,UAAU,oBAAd,mBAEA,yBAASA,UAAU,cAAnB,SACE,uBAAMA,UAAU,QAAQE,SAAUN,GA9B3B,SAACO,GAChBxB,QAAQC,IAAI,qBACZ,IAAIwB,EAAO,CACTC,SAAUF,EAAKG,MACfC,SAAUJ,EAAKI,UAGjBhC,MAAM,aAAc,CAClBU,OAAQ,OACRC,KAAMsB,KAAKC,UAAUL,KAEpB5B,MAAK,SAACY,GAAD,OAAOA,EAAEV,UACdF,MAAK,SAACQ,GACDA,EAAMG,cACRI,EAAMP,GACNL,QAAQC,IAAII,IAEZL,QAAQC,IAAI,gDAGlBkB,OAUQ,UACE,sBAAKE,UAAU,wBAAf,UACE,uBAAOU,QAAQ,QAAf,mBAEA,uBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,WACbC,IAAKnB,EAAS,CACZoB,SAAU,sBACVC,QAAS,CACPC,MAAO,8BACPC,QAAS,4BAIdrB,EAAOS,OACN,mBAAGN,UAAU,SAAb,SAAuBH,EAAOS,MAAMY,aAGxC,sBAAKlB,UAAU,wBAAf,UACE,uBAAOU,QAAQ,WAAf,sBAEA,uBACEC,KAAK,WACLC,KAAK,WACLC,aAAa,mBACbC,IAAKnB,EAAS,CACZoB,SAAU,yBACVI,UAAW,CACTF,MAAO,EACPC,QAAS,gDAIdrB,EAAOU,UACN,mBAAGP,UAAU,SAAb,SAAuBH,EAAOU,SAASW,aAG3C,8BACE,wBAAQlB,UAAU,aAAaW,KAAK,SAApC,+B,oBC3EHS,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,+BAChDlC,IAAVU,EAD0D,oBAGjE,OACE,cAAC,IAAD,2BACMwB,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN1B,EAAS,cAACsB,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUC,GAAG,gBCP1C,SAASC,IAAU,IAAD,EACDC,mBAAS,IADR,mBACxBV,EADwB,KACfW,EADe,KAmB/B,OAhBAvD,qBAAU,WACRgB,EAAU,kBACPd,MAAK,SAACsD,GACL,OAAwB,MAApBA,EAASC,QACXF,EAAW,kCACJ,MAEFC,EAASpD,UAEjBF,MAAK,SAACsD,GACDA,GAAYA,EAASZ,SACvBW,EAAWC,EAASZ,cAGzB,IAEI,0CAAaA,K,kCCtBP,MAA0B,2CCG1B,SAASc,IACtB,OACE,gCAGE,2CACA,qBAAKC,IAAKC,EAASC,IAAI,eCPd,SAASC,EAAWX,GACjC,OACE,qBAAKzB,UAAS,sBAAiByB,EAAMY,SAAW,QAAhD,kECDG,SAASC,EAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAAQ,EACtBnD,IAAVU,EADgC,oBAGvC,OACE,mCACIA,EAUA,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,mBAAmBC,QAASsC,EAA9C,SACE,mBAAGvC,UAAU,kBAEf,4BAAIwC,OAbN,sBAAKxC,UAAU,MAAf,UACE,wBAAQA,UAAU,UAAlB,SACE,mBAAGA,UAAU,kBAEf,4BACE,sDAeL,SAASyC,EAAT,GAA6B,IAAXF,EAAU,EAAVA,OACvB,OACE,sBAAKvC,UAAU,iBAAf,UACE,wBAAQA,UAAU,UAAUC,QAASsC,EAArC,SACE,mBAAGvC,UAAU,mBACL,IAHZ,WCzBW,SAAS0C,EAAT,GAIX,IAHFC,EAGC,EAHDA,SACAC,EAEC,EAFDA,sBACAC,EACC,EADDA,YACC,EACyCnD,cAAlCC,EADP,EACOA,SAAUC,EADjB,EACiBA,aAAcE,EAD/B,EAC+BA,MAD/B,EAE+B8B,oBAAS,GAFxC,mBAEMkB,EAFN,KAEgBC,EAFhB,OAG6BnB,mBAAS,IAHtC,mBAGMoB,EAHN,KAGeC,EAHf,iDAOD,WAA0BrC,GAA1B,iBAAAsC,EAAA,+EAGsB3E,MAAM,wBAAD,OAAyBqC,IAHpD,cAGUuC,EAHV,gBAIuBA,EAAIzE,OAJ3B,OAIUyB,EAJV,OAKI8C,EAAW9C,GALf,6GAPC,sBAgBD,IAcMiD,EAAe,WACnBL,GAAaD,IAGf,OACE,qBAAK9C,UAAU,OAAf,SAOG8C,EACC,qCACE,cAACL,EAAD,CAAQF,OAAQa,IAChB,8BACE,uBAAMlD,SAAUN,GA9BT,SAACO,GAIhByC,EAAsBzC,EADXwC,GAEX7C,OAyBQ,UACE,sBAAKE,UAAU,wBAAf,UACE,uBAAOU,QAAQ,WAAf,sBACA,yBACE2C,aAAc,GACdzC,KAAK,WACL0C,GAAG,WACHC,SA7BG,SAACC,GAClBA,EAAEC,iBAzBH,oCA2BCC,CAAWF,EAAEG,OAAO1C,QA2BNH,IAAKnB,EALP,UAOE,wBAAQsB,MAAM,GAAd,yCAEC4B,QAGL,sBAAK7C,UAAU,wBAAf,UACE,uBAAOU,QAAQ,cAAf,yBACA,yBACE2C,aAAc,GACdzC,KAAK,cACL0C,GAAG,cACHxC,IAAKnB,EAJP,UAME,wBAAQsB,MAAM,GAAd,6BACC+B,EAAQY,KAAI,SAACC,GAAD,OACX,wBAAuB5C,MAAO4C,EAAMC,MAApC,SACGD,EAAMC,OADID,EAAMP,aAMzB,sBAAKtD,UAAU,wBAAf,UACE,uBAAOU,QAAQ,oBAAf,+BACA,uBACEC,KAAK,OACLC,KAAK,oBACL0C,GAAG,oBACHxC,IAAKnB,OAGT,8BACE,wBAAQK,UAAU,aAAaW,KAAK,SAApC,8BAQR,cAAC2B,EAAD,CAAQC,OAAQa,EAAcZ,KAAK,6BCvG5B,SAASuB,EAAT,GAAyC,IAEhDC,EAF+C,EAAhBC,aAGrC,OACE,kCACGD,EAAMJ,KAAI,SAACM,EAAaC,GAAd,OACT,sBAAiBnE,UAAU,0BAA3B,UACE,6BAAKkE,EAAYtD,OACjB,oCACE,8BACE,iDACCsD,EAAYJ,SAEf,8BACE,uDACCI,EAAYE,cATTD,QCJH,SAASE,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,kBAAqB,EACf5E,cAAlCC,EADiD,EACjDA,SAAUC,EADuC,EACvCA,aAAcE,EADyB,EACzBA,MADyB,EAEzB8B,oBAAS,GAFgB,mBAElDkB,EAFkD,KAExCC,EAFwC,OAG7BnB,mBAAS,IAHoB,mBAGlD2C,EAHkD,KAG1CC,EAH0C,iDAOzD,8BAAAtB,EAAA,+EAIsB3E,MAAM,eAJ5B,cAIU4E,EAJV,gBAKuBA,EAAIzE,OAL3B,OAKUyB,EALV,OAQIqE,EAAUrE,GARd,6GAPyD,sBAsBzD7B,qBAAU,WAER,OAxBuD,mCAuBvDmG,GACO,WACLD,EAAU,OAEX,IAEH,IAKMpB,EAAe,WACnBL,GAAaD,IAGf,OACE,qBAAK9C,UAAU,OAAf,SACG8C,EACC,qCACE,cAACL,EAAD,CAAQF,OAAQa,IAChB,8BACE,uBAAMlD,SAAUN,GAfT,SAACO,GAChBxB,QAAQC,IAAIuB,GACZmE,EAAkBnE,GAClBL,OAYQ,UACE,sBAAKE,UAAU,wBAAf,UACE,uBAAOU,QAAQ,WAAf,2BACA,uBACEC,KAAK,OACLC,KAAK,WACL0C,GAAG,WACHxC,IAAKnB,OAGT,sBAAKK,UAAU,wBAAf,UACE,uBAAOU,QAAQ,WAAf,mBACA,yBACE2C,aAAc,GACdzC,KAAK,WACL0C,GAAG,WACHxC,IAAKnB,EAJP,UAME,wBAAQsB,MAAM,GAAd,6BACCsD,EAAOX,KAAI,SAACc,GAAD,OACV,wBAAuBzD,MAAOyD,EAAMpB,GAApC,SACGoB,EAAM9D,MADI8D,EAAMpB,aAMzB,8BACE,wBAAQtD,UAAU,aAAaW,KAAK,SAApC,8BAQR,cAAC2B,EAAD,CAAQC,OAAQa,EAAcZ,KAAK,uBC5E5B,SAASmC,IAAY,IAAD,EACD/C,mBAAS,IADR,mBAC1BgD,EAD0B,KAChBC,EADgB,OAEWjD,oBAAS,GAFpB,mBAE1BkD,EAF0B,KAEVC,EAFU,OAGHnD,oBAAS,GAHN,mBAG1BoD,EAH0B,KAGjBC,EAHiB,OAIPrD,oBAAS,GAJF,mBAI1BsD,EAJ0B,KAInBC,EAJmB,KAM7BC,EAAaC,iBAAO,MACpBC,EAAWD,iBAAO,IA8BhBE,EAA8B,SAACpF,EAAMwC,GAIzC,OAHAhE,QAAQC,IAAI+D,GACZhE,QAAQC,IAAI,uCACZD,QAAQC,IAAIuB,GACL5B,MAAM,oBAAD,OAAqBoE,GAAY,CAC3C1D,OAAQ,OACRC,KAAMsB,KAAKC,UAAU,CAAEN,SACvBqF,QAAS,CACP,eAAgB,sBAGjBhH,MAAK,WACJ4G,EAAWK,QAAX,aAA2B9C,GAC3BoC,GAAmBD,MAEpBY,OAAM,SAACC,GACNR,EAASQ,EAAIzE,aAIb0E,EAAcC,uBAAY,WAE9B,OADAZ,GAAW,GACJ1G,MAAM,iBACVC,MAAK,SAAC2E,GACL,OAAOA,EAAIzE,UAEZF,MAAK,SAAC2B,GACLxB,QAAQC,IAAR,yDAA8DuB,IAC9D8E,GAAW,GACXJ,EAAY,YAAI1E,OAEjBuF,OAAM,SAACC,GACNR,EAASQ,EAAIzE,SACb+D,GAAW,QAEd,IA8DH,OA5DA3G,qBAAU,WAeR,OAdAsH,IAAcpH,MAAK,WAGjB,GAFAG,QAAQC,IAAR,+BAAoCwG,EAAWK,UAE3CL,EAAWK,QAAS,CACtB,IACMK,EADUC,SAASC,eAAe,mBACnBC,cAAcb,EAAWK,SAC9C9G,QAAQC,IAAR,iBAAsBkH,IAElBA,GACFA,EAAKI,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAEnDhB,EAAWK,QAAU,SAGlB,WACLZ,EAAY,OAEb,CAACe,EAAad,EAAgBM,IAEjC9G,qBAAU,WAAM,4CACd,gCAAA4E,EAAA,+EAIsB3E,MAAM,kBAJ5B,cAIU4E,EAJV,gBAKuBA,EAAIzE,OAL3B,OAKUyB,EALV,OAQUkG,EAAOC,OAAOC,KAAKpG,GAAMqG,OAC/B7H,QAAQC,IAAIuB,EAAK,IAMjBmF,EAASG,QAAQgB,KACftG,EAAKuG,MAAM,EAAGL,EAAO,GAAGzC,KAAI,SAAC+C,GAAD,OAC1B,wBAA0B1F,MAAO0F,EAAS/F,KAA1C,SACG+F,EAAS/F,MADC+F,EAASrD,QAK1BgC,EAASG,QAAQgB,KACftG,EAAKuG,MAAML,EAAO,EAAGA,GAAMzC,KAAI,SAAC+C,GAAD,OAC7B,wBAA0B1F,MAAO0F,EAAS/F,KAA1C,SACG+F,EAAS/F,MADC+F,EAASrD,QAK1B3E,QAAQC,IAAR,qBAA0B0G,IA7B9B,kDA+BI3G,QAAQC,IAAR,MA/BJ,2DADc,uBAAC,WAAD,wBAqCdgI,KACC,CAACtB,IAGF,gCACE,oBAAItF,UAAU,oBAAd,sBACCgF,EACC,cAAChD,EAAD,IACEkD,EACF,cAAC9C,EAAD,CAAYC,QAAQ,SAApB,SAA8B6C,IAE9B,qCACE,kCACE,cAACb,EAAD,CAAaC,kBAvIS,SAACnE,GAI/B,OAHAxB,QAAQC,IAAI,oCACZD,QAAQC,IAAR,iCAAsC4B,KAAKC,UAAU,CAAEN,WACvD8E,GAAW,GACJ1G,MAAM,kBAAmB,CAC9BU,OAAQ,OACRC,KAAMsB,KAAKC,UAAU,CAAEN,SACvBqF,QAAS,CACP,eAAgB,sBAGjBhH,MAAK,SAAC2E,GACL,OAAOA,EAAIzE,UAEZF,MAAK,SAAC2B,GAILiF,EAAWK,QAAX,aAA2BtF,EAAKwC,UAChCsC,GAAW,MAEZzG,KAAKuG,GAAmBD,IACxBY,OAAM,SAACC,GACNR,EAASQ,EAAIzE,SACb+D,GAAW,WAiHT,yBAAS3B,GAAG,kBAAZ,SACGsB,EAAShB,KAAI,SAACiD,GAAD,OACZ,sBAA4BvD,GAAE,YAAOuD,EAAQC,MAAMxD,IAAnD,UACE,qBAAItD,UAAU,kBAAd,UACG6G,EAAQC,MAAMlG,KADjB,IACwBiG,EAAQC,MAAMC,YAEtC,cAACrE,EAAD,CACEC,SAAUkE,EAAQC,MAAMxD,GACxBV,sBAAuB2C,EACvB1C,YAAayC,EAASG,UAExB,cAAC1B,EAAD,CAAcE,aAAc4C,EAAQ5C,iBAT5B4C,EAAQC,MAAMxD,eCtJvB,SAAS0D,IAAc,IAAD,EACbpF,mBAAS,IADI,mBAC5BqF,EAD4B,KACvBC,EADuB,OAELtF,oBAAS,GAFJ,mBAE5BoD,EAF4B,KAEnBC,EAFmB,OAGTrD,oBAAS,GAHA,mBAG5BsD,EAH4B,KAGrBC,EAHqB,iDAKnC,8BAAAjC,EAAA,sEAEI+B,GAAW,GAFf,SAIsB1G,MAAM,mBAJ5B,cAIU4E,EAJV,gBAKuBA,EAAIzE,OAL3B,OAKUyB,EALV,OAMI8E,GAAW,GAEXiC,EAAO/G,GARX,kDAUIgF,EAAS,KAAIjE,SACb+D,GAAW,GAXf,2DALmC,sBA0BnC,OAPA3G,qBAAU,WAER,OArBiC,mCAoBjC6I,GACO,WACLD,EAAO,OAER,IAGD,gCACE,oBAAIlH,UAAU,oBAAd,wBACCgF,EACC,cAAChD,EAAD,IACEkD,EACF,cAAC9C,EAAD,CAAYC,QAAQ,SAApB,SAA8B6C,IAE9B,mCACE,cAACnB,EAAD,CAAcE,aAAcgD,SCpCvB,SAASG,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,gBAAmB,EACN3H,cAAlCC,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,aAAcE,EADgB,EAChBA,MADgB,EAEhB8B,oBAAS,GAFO,mBAEzCkB,EAFyC,KAE/BC,EAF+B,KAS1CK,EAAe,WACnBL,GAAaD,IAGf,OACE,qBAAK9C,UAAU,OAAf,SACG8C,EACC,qCACE,cAACL,EAAD,CAAQF,OAAQa,IAChB,8BACE,uBAAMlD,SAAUN,GAfT,SAACO,GAChBxB,QAAQC,IAAIuB,GACZkH,EAAgBlH,GAChBL,OAYQ,UACE,sBAAKE,UAAU,wBAAf,UACE,yCACA,uBAAOW,KAAK,OAAOC,KAAK,OAAOE,IAAKnB,OAEtC,sBAAKK,UAAU,wBAAf,UACE,4CACA,uBAAOW,KAAK,OAAOC,KAAK,UAAUE,IAAKnB,OAEzC,sBAAKK,UAAU,wBAAf,UACE,4CACA,uBAAOW,KAAK,OAAOC,KAAK,OAAOE,IAAKnB,OAEtC,8BACE,wBAAQK,UAAU,aAAaW,KAAK,SAApC,8BAQR,cAAC2B,EAAD,CAAQC,OAAQa,EAAcZ,KAAK,uBCxC5B,SAAS8E,IAAU,IAAD,EACH1F,mBAAS,IADN,mBACxB2C,EADwB,KAChBC,EADgB,OAED5C,oBAAS,GAFR,mBAExBoD,EAFwB,KAEfC,EAFe,OAGLrD,oBAAS,GAHJ,mBAGxBsD,EAHwB,KAGjBC,EAHiB,OAIWvD,oBAAS,GAJpB,mBAIxB2F,EAJwB,KAITC,EAJS,KAiBzB/C,EAAYoB,uBAAY,WAE5B,OADAZ,GAAW,GACJ1G,MAAM,eACVC,MAAK,SAAC2E,GACL,OAAOA,EAAIzE,UAEZF,MAAK,SAAC2B,GACLxB,QAAQC,IAAIuB,GACZ8E,GAAW,GACXT,EAAU,YAAIrE,OAEfuF,OAAM,SAACC,GACNR,EAASQ,EAAIzE,SACb+D,GAAW,QAEd,IASH,OAPA3G,qBAAU,WAER,OADAmG,IACO,WACLD,EAAU,OAEX,CAACC,EAAW8C,IAGb,gCACE,oBAAIvH,UAAU,oBAAd,oBACCgF,EACC,cAAChD,EAAD,IACEkD,EACF,cAAC9C,EAAD,CAAYC,QAAQ,SAApB,SAA8B6C,IAE9B,qCACE,yBAASlF,UAAU,cAAnB,SACE,cAAC,EAAD,CAAWqH,gBA7CI,SAAClH,GACxB5B,MAAM,aAAc,CAClBU,OAAQ,OACRC,KAAMsB,KAAKC,UAAU,CAAEN,SACvBqF,QAAS,CACP,eAAgB,sBAGpBgC,GAAkBD,QAuCZ,yBAASvH,UAAU,aAAnB,SACGuE,EAAOX,KAAI,SAACc,GAAD,OACV,qBAAoB1E,UAAU,0BAA9B,SACE,oCACG0E,EAAM9D,KACP,8BACE,mBAAG6G,KAAM/C,EAAMgD,KAAM/D,OAAO,SAASgE,IAAI,aAAzC,qBAEK,IAHP,IAII,IACF,mBACEF,KAAI,0DAAqD/C,EAAMkD,SAC/DjE,OAAO,SACPgE,IAAI,aAHN,wBARIjD,EAAMpB,eCgHfuE,MAvKf,WAAqB,IAAD,EACgCnI,YAAQ,IAAlDC,EADU,EACVA,SAAUC,EADA,EACAA,aAAcC,EADd,EACcA,OAAQiI,EADtB,EACsBA,MAGlC9I,EADM,IAAI+I,gBAAgBC,cAAcC,QAC1BC,IAAI,SAClB3H,EAAW8E,iBAAO,IAClB8C,EAAe9C,iBAAO,IANV,EAOYzD,oBAAS,GAPrB,mBAOXoD,EAPW,KAOFC,EAPE,OAQQrD,oBAAS,GARjB,mBAQXsD,EARW,KAQJC,EARI,OASkBvD,oBAAS,GAT3B,mBASXwG,EATW,KASCC,EATD,OAUgBzG,oBAAS,GAVzB,mBAUX0G,EAVW,KAUAC,EAVA,KAWdC,EAAkBnD,iBAAO,MACzBjF,EAAOiF,iBAAO,MA4ElB,OA3EA9E,EAASkF,QAAUqC,EAAM,WAAY,IA4CrCxJ,qBAAU,WAyBR,OAxBIgK,IACF3J,QAAQC,IAAR,2BACsBwB,EAAKqF,QAD3B,iCAGAlH,MAAM,qBAAsB,CAC1BU,OAAQ,OACRuG,QAAS,CACPiD,cAAe,UAAYD,EAAgB/C,QAC3C,eAAgB,oBAElBvG,KAAMsB,KAAKC,UAAUL,EAAKqF,WAEzBjH,MAAK,SAAC2E,GACLxE,QAAQC,IAAI,wBACZD,QAAQC,IAAR,qBAA0BuE,EAAIuF,QAE/BlK,MAAK,WACJ6J,GAAc,MAEf3C,OAAM,SAACC,GACNhH,QAAQC,IAAI+G,EAAIzE,SAChBiE,EAAS,uDAGR,eAIN,CAAC/E,EAAMoI,EAAiBF,IAGzB,mCACGtD,EACC,cAAChD,EAAD,IACEkD,EACF,mCAEE,4BAAIA,MAEHkD,EA2DH,gCACE,oBAAIpI,UAAU,oBAAd,sCACA,yBAASA,UAAU,cAAnB,SACE,cAAC,IAAD,CAAM0B,GAAG,SAAT,wBA7DJ,gCACE,oBAAI1B,UAAU,oBAAd,+BACA,yBAASA,UAAU,cAAnB,SACE,uBAAMA,UAAU,QAAQE,SAAUN,GAtF5C,SAAkBO,GAChBxB,QAAQC,IAAI,kCACZqG,GAAW,GACX7E,EAAKqF,QAAU,CACbpF,SAAUF,EAAKE,SACfE,SAAUJ,EAAKI,UAEjB5B,QAAQC,IAAR,oCAAyCwB,EAAKqF,UAC9C9G,QAAQC,IAAR,6CAAkDwB,EAAKqF,QAAQpF,WAC/D1B,QAAQC,IAAR,6CAAkDwB,EAAKqF,QAAQlF,WAC/DhC,MAAM,gBAAiB,CACrBU,OAAQ,MACRuG,QAAS,CACPiD,cAAe,UAAYzJ,EAC3B,eAAgB,sBAGjBR,MAAK,SAAC2E,GAGL,OAFAxE,QAAQC,IAAI,mBACZD,QAAQC,IAAR,qBAA0BuE,EAAIuF,KACvBvF,EAAIzE,UAEZF,MAAK,SAACmK,GACLhK,QAAQC,IAAI,cAAgB+J,GAC5BH,EAAgB/C,QAAUkD,EAASxJ,aACnCR,QAAQC,IAAI,6BAA+B4J,EAAgB/C,SAC3DrF,EAAKqF,QAAQpF,SAAWsI,EAAStI,SACjC1B,QAAQC,IAAR,kCAAuCwB,EAAKqF,QAAQpF,WAChDmI,EAAgB/C,QAClB8C,GAAa,GAEbpD,EAAS,mDAEXF,GAAW,MAEZS,OAAM,SAACC,GACNhH,QAAQC,IAAI+G,EAAIzE,SAChBiE,EAAS,mDACTF,GAAW,SAgDP,UACE,8BACE,uBACE2D,QAAM,EACNC,UAAQ,EACRlI,KAAK,OACLC,KAAK,WACLC,aAAa,WACbI,MAAOkH,MAGX,sBAAKnI,UAAU,wBAAf,UACE,uBAAOU,QAAQ,WAAf,sBAEA,uBACEC,KAAK,WACLC,KAAK,WACLC,aAAa,eACbC,IAAKnB,EAAS,CACZoB,SAAU,yBACVI,UAAW,CACTF,MAAO,EACPC,QAAS,gDAIdrB,EAAOU,UACN,mBAAGP,UAAU,SAAb,SAAuBH,EAAOU,SAASW,aAG3C,sBAAKlB,UAAU,wBAAf,UACE,uBAAOU,QAAQ,kBAAf,6BAEA,uBACEC,KAAK,WACLC,KAAK,kBACLC,aAAa,eACbC,IAAKnB,EAAS,CACZmJ,SAAU,SAAC7H,GAAD,OACRA,IAAUV,EAASkF,SAAW,8BAGnC5F,EAAOkJ,iBACN,mBAAG/I,UAAU,SAAb,SAAuBH,EAAOkJ,gBAAgB7H,aAGlD,8BACE,wBAAQlB,UAAU,aAAaW,KAAK,SAApC,0CC/BDqI,MArHf,WAAmB,IAAD,EACkCtJ,cAA1CC,EADQ,EACRA,SAAUC,EADF,EACEA,aAAcC,EADhB,EACgBA,OAAQC,EADxB,EACwBA,MACpCmJ,EAAO5D,iBAAO,MAFF,EAIczD,oBAAS,GAJvB,mBAIToD,EAJS,KAIAC,EAJA,OAKUrD,oBAAS,GALnB,mBAKTsD,EALS,KAKFC,EALE,KAOVnG,EADM,IAAI+I,gBAAgBC,cAAcC,QAC1BC,IAAI,SA6CxB,OACE,gCACE,oBAAIlI,UAAU,oBAAd,iCACCgF,EACC,cAAChD,EAAD,IACEkD,EACF,qCACE,wDACA,4BAAIA,OAEJ+D,EAAKxD,QACP,uEAA0CwD,EAAKxD,QAA/C,OAEA,mCACE,yBAASzF,UAAU,cAAnB,SACE,uBAAMA,UAAU,QAAQE,SAAUN,GA1D3B,SAACO,GAChBxB,QAAQC,IAAI,6BACZqG,GAAW,GACX,IAAI7E,EAAO,CACTC,SAAUF,EAAKG,MACf4I,MAAO/I,EAAK+I,OAEdvK,QAAQC,IAAII,GACZT,MAAM,gBAAiB,CACrBU,OAAQ,OACRuG,QAAS,CACPiD,cAAe,UAAYzJ,EAC3B,eAAgB,oBAElBE,KAAMsB,KAAKC,UAAUL,KAEpB5B,MAAK,SAAC2E,GACLxE,QAAQC,IAAI,mBACZD,QAAQC,IAAR,qBAA0BuE,EAAIuF,KAC1BvF,EAAIuF,KAENO,EAAKxD,QAAUrF,EAAKC,SACpB1B,QAAQC,IAAR,yBAA8BqK,EAAKxD,WAErCR,GAAW,MAEZS,OAAM,SAACC,GACNR,EAASQ,EAAIzE,SACb+D,GAAW,MAEfnF,OA4BQ,UACE,sBAAKE,UAAU,wBAAf,UACE,uBAAOU,QAAQ,QAAf,mBAEA,uBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,WACbC,IAAKnB,EAAS,CACZoB,SAAU,sBACVC,QAAS,CACPC,MAAO,8BACPC,QAAS,4BAIdrB,EAAOS,OACN,mBAAGN,UAAU,SAAb,SAAuBH,EAAOS,MAAMY,aAGxC,sBAAKlB,UAAU,wBAAf,UACE,uBAAOU,QAAQ,QAAf,kBAEA,uBACEC,KAAK,OACLC,KAAK,QACLuI,YAAY,wBACZrI,IAAKnB,EAAS,CACZoB,SAAU,qBACVI,UAAW,CACTF,MAAO,EACPC,QAAS,4CAIdrB,EAAOqJ,OACN,mBAAGlJ,UAAU,SAAb,SAAuBH,EAAOqJ,MAAMhI,aAGxC,wBAAQlB,UAAU,aAAaW,KAAK,SAApC,mCCjCCyI,MAhEf,WAAgB,IAAD,EACI/J,IAAVU,EADM,oBAEb,OACE,mCACE,cAAC,IAAD,UACE,sBAAKC,UAAU,iBAAf,UACE,yBAAQA,UAAU,MAAlB,UACE,8BACE,cAAC,IAAD,CAAM0B,GAAG,IAAT,SACE,kDAGJ,gCACE,cAAC,IAAD,CAAMA,GAAG,YAAT,sBADF,KACyC,IACvC,cAAC,IAAD,CAAMA,GAAG,cAAT,wBAFF,KAE6C,IAC3C,cAAC,IAAD,CAAMA,GAAG,UAAT,oBAHF,KAGqC,IACnC,cAAC,IAAD,CAAMA,GAAG,SAAT,SAAoB3B,EAAsB,8CAAb,+CAJ/B,KAIkE,IAChE,cAAC,IAAD,CAAM2B,GAAG,UAAT,0BAKJ,+BACE,qBAAK1B,UAAU,QAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAK,IAAlB,SACE,cAACjL,EAAD,MAEF,cAAC,IAAD,CAAOiL,KAAK,SAAZ,SACE,cAAC7J,EAAD,MAEF,cAAC,IAAD,CAAO6J,KAAK,YAAZ,SAEE,cAAC3E,EAAD,MAEF,cAAC,IAAD,CAAO2E,KAAK,cAAZ,SACE,cAACtC,EAAD,MAEF,cAAC,IAAD,CAAOsC,KAAK,UAAZ,SAEE,cAAC3H,EAAD,MAEF,cAAC,IAAD,CAAO2H,KAAK,UAAZ,SACE,cAAChC,EAAD,MAEF,cAAC,EAAD,CAAcgC,KAAK,UAAUhI,UAAW0H,IACxC,cAAC,IAAD,UACE,cAAC,EAAD,aAUR,wBAAQhJ,UAAU,cAAlB,0CC3DKuJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjL,MAAK,YAAkD,IAA/CkL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASvI,OACP,cAAC,IAAMwI,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASC,eAAe,SAM1BuD,M","file":"static/js/main.fd8ceeb0.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nexport default function Home() {\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((resp) => resp.json())\n      .then((resp) => console.log(resp));\n  }, []);\n  return <h1>Home Page</h1>;\n}\n","import { createAuthProvider } from \"react-token-auth\";\n\nexport const [useAuth, authFetch, login, logout] = createAuthProvider({\n  accessTokenKey: \"access_token\",\n  onUpdateToken: (token) =>\n    fetch(\"/api/refresh\", {\n      method: \"POST\",\n      body: token.access_token,\n    }).then((r) => r.json()),\n});\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { login, useAuth, logout } from \"../auth\";\n\nexport default function Login() {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [logged] = useAuth();\n\n  const onSubmit = (data) => {\n    console.log(\"You pressed login\");\n    let opts = {\n      username: data.email,\n      password: data.password,\n    };\n    // console.log(opts);\n    fetch(\"/api/login\", {\n      method: \"post\",\n      body: JSON.stringify(opts),\n    })\n      .then((r) => r.json())\n      .then((token) => {\n        if (token.access_token) {\n          login(token);\n          console.log(token);\n        } else {\n          console.log(\"Please type in correct username/password.\");\n        }\n      });\n    reset();\n  };\n\n  return (\n    <>\n      {!logged ? (\n        <div>\n          <h1 className=\"row central title\">Login</h1>\n\n          <section className=\"row central\">\n            <form className=\"login\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"email\">Email</label>\n\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  autoComplete=\"username\"\n                  ref={register({\n                    required: \"*Email is required.\",\n                    pattern: {\n                      value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                      message: \"*Email is not valid.\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <p className=\"danger\">{errors.email.message}</p>\n                )}\n              </div>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"password\">Password</label>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  autoComplete=\"current-password\"\n                  ref={register({\n                    required: \"*Password is required.\",\n                    minLength: {\n                      value: 8,\n                      message: \"*Password must be at least 8 characters.\",\n                    },\n                  })}\n                />\n                {errors.password && (\n                  <p className=\"danger\">{errors.password.message}</p>\n                )}\n              </div>\n              <div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Login\n                </button>\n              </div>\n            </form>\n          </section>\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"row central title\">You are logged in!</h2>\n          <section className=\"row central\">\n            <button onClick={() => logout()}>Click to Logout</button>\n          </section>\n        </div>\n      )}\n    </>\n  );\n}\n","import { Redirect, Route } from \"react-router-dom\";\nimport { useAuth } from \"../auth\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        logged ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { authFetch } from \"../auth\";\n\nexport default function Secret() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    authFetch(\"/api/protected\")\n      .then((response) => {\n        if (response.status === 401) {\n          setMessage(\"Sorry, you are not authorized!\");\n          return null;\n        }\n        return response.json();\n      })\n      .then((response) => {\n        if (response && response.message) {\n          setMessage(response.message);\n        }\n      });\n  }, []);\n\n  return <h2>Secret: {message}</h2>;\n}\n","export default __webpack_public_path__ + \"static/media/icons8-refresh.9e337836.gif\";","import React from \"react\";\nimport spinner from \"../icons8-refresh.gif\";\n\nexport default function LoadingBox() {\n  return (\n    <div>\n      {/* <img src=\"fas fa-spinner fa-spin\" alt=\"spinner...\" /> */}\n      {/* <img src={require(\"../icons8-refresh.gif\")} alt=\"spinner...\" /> Loading... */}\n      <p>Loading...</p>\n      <img src={spinner} alt=\"spinner\" />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function MessageBox(props) {\n  return (\n    <div className={`alert alert-${props.variant || \"info\"}`}>\n      {/* {props.children} */}\n      An error has occurred. Refresh or click back button.\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useAuth } from \"../auth\";\n\nexport function Opener({ toggle, text }) {\n  const [logged] = useAuth();\n\n  return (\n    <>\n      {!logged ? (\n        <div className=\"row\">\n          <button className=\"toggler\">\n            <i className=\"fas fa-plus\"></i>\n          </button>\n          <p>\n            <i>Login required</i>\n          </p>\n        </div>\n      ) : (\n        <div className=\"row\">\n          <button className=\"toggler slow-btn\" onClick={toggle}>\n            <i className=\"fas fa-plus\"></i>\n          </button>\n          <p>{text}</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport function Closer({ toggle }) {\n  return (\n    <div className=\"closing-toggle\">\n      <button className=\"toggler\" onClick={toggle}>\n        <i className=\"fas fa-minus\"></i>\n      </button>{\" \"}\n      Close\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// import LoadingBox from \"./LoadingBox\";\n// import MessageBox from \"./MessageBox\";\nimport { Opener, Closer } from \"./Toggles\";\n\nexport default function PerformanceForm({\n  event_id,\n  performanceFormSubmit,\n  compOptions,\n}) {\n  const { register, handleSubmit, reset } = useForm();\n  const [needForm, setNeedForm] = useState(false);\n  const [compRep, setCompRep] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // const [error, setError] = useState(false);\n\n  async function getCompRep(name) {\n    try {\n      //   console.log(\"Inside getCompRep(\" + name + \")\");\n      const res = await fetch(`/api/composer_pieces/${name}`);\n      const data = await res.json();\n      setCompRep(data);\n    } catch (err) {}\n  }\n\n  const onSubmit = (data) => {\n    // console.log(data);\n    // console.log(event_id);\n    const id = event_id;\n    performanceFormSubmit(data, id);\n    reset();\n  };\n\n  const handleName = (e) => {\n    e.preventDefault();\n    // console.log(e.target.value);\n    getCompRep(e.target.value);\n  };\n\n  const handleToggle = () => {\n    setNeedForm(!needForm);\n  };\n\n  return (\n    <div className=\"card\">\n      {/* {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <> */}\n      {needForm ? (\n        <>\n          <Closer toggle={handleToggle} />\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-div hori-control\">\n                <label htmlFor=\"composer\">Composer</label>\n                <select\n                  defaultValue={\"\"}\n                  name=\"composer\"\n                  id=\"composer\"\n                  onChange={handleName}\n                  ref={register}\n                >\n                  <option value=\"\">Type or scroll to search...</option>\n                  {/* 31606 composers */}\n                  {compOptions}\n                </select>\n              </div>\n              <div className=\"form-div hori-control\">\n                <label htmlFor=\"imslp_title\">IMSLP Title</label>\n                <select\n                  defaultValue={\"\"}\n                  name=\"imslp_title\"\n                  id=\"imslp_title\"\n                  ref={register}\n                >\n                  <option value=\"\">Choose piece...</option>\n                  {compRep.map((piece) => (\n                    <option key={piece.id} value={piece.title}>\n                      {piece.title}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-div hori-control\">\n                <label htmlFor=\"performance_notes\">Performance Notes</label>\n                <input\n                  type=\"text\"\n                  name=\"performance_notes\"\n                  id=\"performance_notes\"\n                  ref={register}\n                />\n              </div>\n              <div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      ) : (\n        <Opener toggle={handleToggle} text=\"Add new performance...\" />\n      )}\n      {/* </>\n      )} */}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Performances({ performances }) {\n  // console.log(performances);\n  const perfs = performances;\n  return (\n    <section>\n      {perfs.map((performance, index) => (\n        <div key={index} className=\"card card-div perfs-div\">\n          <h2>{performance.name}</h2>\n          <article>\n            <p>\n              <span>IMSLP Title: </span>\n              {performance.title}\n            </p>\n            <p>\n              <span>Performance Notes: </span>\n              {performance.notes}\n            </p>\n          </article>\n        </div>\n      ))}\n    </section>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Opener, Closer } from \"./Toggles\";\n\nexport default function ProgramForm({ programFormSubmit }) {\n  const { register, handleSubmit, reset } = useForm();\n  const [needForm, setNeedForm] = useState(false);\n  const [venues, setVenues] = useState([]);\n  //   const [loading, setLoading] = useState(false);\n  //   const [error, setError] = useState(false);\n\n  async function getVenues() {\n    try {\n      //   setLoading(true);\n\n      const res = await fetch(\"/api/venues\");\n      const data = await res.json();\n      //   setLoading(false);\n      // console.log(data);\n      setVenues(data);\n      // console.log(res);\n    } catch (err) {\n      //   setError(err.message);\n      //   setLoading(false);\n    }\n  }\n  useEffect(() => {\n    getVenues();\n    return () => {\n      setVenues([]);\n    };\n  }, []);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    programFormSubmit(data);\n    reset();\n  };\n  const handleToggle = () => {\n    setNeedForm(!needForm);\n  };\n\n  return (\n    <div className=\"card\">\n      {needForm ? (\n        <>\n          <Closer toggle={handleToggle} />\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-div hori-control\">\n                <label htmlFor=\"day_time\">Date and Time</label>\n                <input\n                  type=\"text\"\n                  name=\"day_time\"\n                  id=\"day_time\"\n                  ref={register}\n                />\n              </div>\n              <div className=\"form-div hori-control\">\n                <label htmlFor=\"venue_id\">Venue</label>\n                <select\n                  defaultValue={\"\"}\n                  name=\"venue_id\"\n                  id=\"venue_id\"\n                  ref={register}\n                >\n                  <option value=\"\">Choose venue...</option>\n                  {venues.map((venue) => (\n                    <option key={venue.id} value={venue.id}>\n                      {venue.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      ) : (\n        <Opener toggle={handleToggle} text=\"Add new event...\" />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport LoadingBox from \"./LoadingBox\";\nimport MessageBox from \"./MessageBox\";\nimport PerformanceForm from \"./PerformanceForm\";\nimport Performances from \"./Performances\";\nimport ProgramForm from \"./ProgramForm\";\n\nexport default function Programs() {\n  const [programs, setPrograms] = useState([]);\n  const [submitPerfBool, setSubmitPerfBool] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  let program_id = useRef(null);\n  let compOpts = useRef([]);\n\n  const handleProgramFormSubmit = (data) => {\n    console.log('Begin \"handleProgramFormSubmit:\"');\n    console.log(`RAW PROGRAM FORM DATA: ${JSON.stringify({ data })}`);\n    setLoading(true);\n    return fetch(\"api/new_program\", {\n      method: \"POST\",\n      body: JSON.stringify({ data }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        // console.log(\n        //   `JSONified \"data\" return from \"api/new_program\": ${data.event_id}`\n        // );\n        program_id.current = `#id${data.event_id}`;\n        setLoading(false);\n      })\n      .then(setSubmitPerfBool(!submitPerfBool))\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  };\n\n  const handlePerformanceFormSubmit = (data, event_id) => {\n    console.log(event_id);\n    console.log(\"From 'handlePerformanceFormSubmit':\");\n    console.log(data);\n    return fetch(`api/performances/${event_id}`, {\n      method: \"POST\",\n      body: JSON.stringify({ data }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then(() => {\n        program_id.current = `#id${event_id}`;\n        setSubmitPerfBool(!submitPerfBool);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  };\n\n  const getPrograms = useCallback(() => {\n    setLoading(true);\n    return fetch(\"/api/programs\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(`Inside getPrograms, before \"setPrograms\" call: ${data}`);\n        setLoading(false);\n        setPrograms([...data]);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    getPrograms().then(() => {\n      console.log(`program_id.current = ${program_id.current}`);\n      // if (program_id.current !== null) {\n      if (program_id.current) {\n        const section = document.getElementById(\"program_section\");\n        const prog = section.querySelector(program_id.current);\n        console.log(`prog = ${prog}`);\n        // if (prog !== null) {\n        if (prog) {\n          prog.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }\n        program_id.current = null; // Maybe not necessary?\n      }\n    });\n    return () => {\n      setPrograms([]);\n    };\n  }, [getPrograms, submitPerfBool, program_id]);\n\n  useEffect(() => {\n    async function getComposers() {\n      try {\n        // setLoading(true);\n\n        const res = await fetch(\"/api/composers\");\n        const data = await res.json();\n        // setLoading(false);\n        // console.log(data);\n        const dLen = Object.keys(data).length;\n        console.log(data[0]);\n\n        // mapping composer data to option tags\n        // in two halves, otherwise reactDevTools\n        // warning 'Exceeded maximum callstack length'\n        // via react's shouldFilterFiber method\n        compOpts.current.push(\n          data.slice(1, dLen / 2).map((composer) => (\n            <option key={composer.id} value={composer.name}>\n              {composer.name}\n            </option>\n          ))\n        );\n        compOpts.current.push(\n          data.slice(dLen / 2, dLen).map((composer) => (\n            <option key={composer.id} value={composer.name}>\n              {composer.name}\n            </option>\n          ))\n        );\n        console.log(`compOpts = ${compOpts}`);\n      } catch (err) {\n        console.log(err);\n        // setError(err.message);\n        // setLoading(false);\n      }\n    }\n    getComposers();\n  }, [compOpts]);\n\n  return (\n    <div>\n      <h1 className=\"row central title\">Programs</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <section>\n            <ProgramForm programFormSubmit={handleProgramFormSubmit} />\n          </section>\n          <section id=\"program_section\">\n            {programs.map((program) => (\n              <div key={program.event.id} id={`id${program.event.id}`}>\n                <h1 className=\"heading central\">\n                  {program.event.name} {program.event.day_time}\n                </h1>\n                <PerformanceForm\n                  event_id={program.event.id}\n                  performanceFormSubmit={handlePerformanceFormSubmit}\n                  compOptions={compOpts.current}\n                />\n                <Performances performances={program.performances} />\n              </div>\n            ))}\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport LoadingBox from \"./LoadingBox\";\nimport MessageBox from \"./MessageBox\";\nimport Performances from \"./Performances\";\n\nexport default function Repertoire() {\n  const [rep, setRep] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  async function getRep() {\n    try {\n      setLoading(true);\n\n      const res = await fetch(\"/api/repertoire\");\n      const data = await res.json();\n      setLoading(false);\n      // console.log(data);\n      setRep(data);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    getRep();\n    return () => {\n      setRep([]);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"row central title\">Repertoire</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <Performances performances={rep} />\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Closer, Opener } from \"./Toggles\";\n\nexport default function Form({ venueFormSubmit }) {\n  const { register, handleSubmit, reset } = useForm();\n  const [needForm, setNeedForm] = useState(false);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    venueFormSubmit(data);\n    reset();\n  };\n  const handleToggle = () => {\n    setNeedForm(!needForm);\n  };\n\n  return (\n    <div className=\"card\">\n      {needForm ? (\n        <>\n          <Closer toggle={handleToggle} />\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-div hori-control\">\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" ref={register} />\n              </div>\n              <div className=\"form-div hori-control\">\n                <label>Address</label>\n                <input type=\"text\" name=\"address\" ref={register} />\n              </div>\n              <div className=\"form-div hori-control\">\n                <label>Website</label>\n                <input type=\"text\" name=\"link\" ref={register} />\n              </div>\n              <div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      ) : (\n        <Opener toggle={handleToggle} text=\"Add new venue...\" />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport VenueForm from \"./VenueForm\";\nimport LoadingBox from \"./LoadingBox\";\nimport MessageBox from \"./MessageBox\";\n\nexport default function Venues() {\n  const [venues, setVenues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitVenBool, setSubmitVenBool] = useState(false);\n\n  const handleFormSubmit = (data) => {\n    fetch(\"api/venues\", {\n      method: \"POST\",\n      body: JSON.stringify({ data }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    });\n    setSubmitVenBool(!submitVenBool);\n  };\n\n  const getVenues = useCallback(() => {\n    setLoading(true);\n    return fetch(\"/api/venues\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        setLoading(false);\n        setVenues([...data]);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    getVenues();\n    return () => {\n      setVenues([]);\n    };\n  }, [getVenues, submitVenBool]);\n\n  return (\n    <div>\n      <h1 className=\"row central title\">Venues</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <section className=\"row central\">\n            <VenueForm venueFormSubmit={handleFormSubmit} />\n          </section>\n          <section className=\"venue-list\">\n            {venues.map((venue) => (\n              <div key={venue.id} className=\"card card-div venue-div\">\n                <article>\n                  {venue.name}\n                  <p>\n                    <a href={venue.link} target=\"_blank\" rel=\"noreferrer\">\n                      website\n                    </a>{\" \"}\n                    |{\" \"}\n                    <a\n                      href={`https://www.google.com/maps/search/?api=1&query=${venue.address}`}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      map\n                    </a>\n                  </p>\n                </article>\n              </div>\n            ))}\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport LoadingBox from \"./LoadingBox\";\n\nfunction Finalize() {\n  const { register, handleSubmit, errors, watch } = useForm({});\n\n  let query = new URLSearchParams(useLocation().search);\n  const token = query.get(\"token\");\n  const password = useRef({});\n  const emailAddress = useRef({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [registered, setRegistered] = useState(false);\n  const [finalized, setFinalized] = useState(false);\n  let finalized_token = useRef(null);\n  let opts = useRef(null);\n  password.current = watch(\"password\", \"\");\n\n  function onSubmit(data) {\n    console.log(\"You pressed 'Submit Password'.\");\n    setLoading(true);\n    opts.current = {\n      username: data.username,\n      password: data.password,\n    };\n    console.log(`onSubmit: 'opts.current = ${opts.current}`);\n    console.log(`onSubmit: 'opts.current.username = ${opts.current.username}`);\n    console.log(`onSubmit: 'opts.current.password = ${opts.current.password}`);\n    fetch(\"/api/finalize\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        console.log(\"After finalize:\");\n        console.log(`'res.ok' = ${res.ok}`);\n        return res.json();\n      })\n      .then((res_json) => {\n        console.log(\"res_json = \" + res_json);\n        finalized_token.current = res_json.access_token;\n        console.log(\"finalized_token.current = \" + finalized_token.current);\n        opts.current.username = res_json.username;\n        console.log(`opts.current.username = ${opts.current.username}`);\n        if (finalized_token.current) {\n          setFinalized(true);\n        } else {\n          setError(\"An error has occured. Contact support for help.\");\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setError(\"An error has occured. Contact support for help.\");\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    if (finalized) {\n      console.log(\n        `'opts.current' = ${opts.current}.\\nFetching 'post_finalize'.`\n      );\n      fetch(\"/api/post_finalize\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + finalized_token.current,\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(opts.current),\n      })\n        .then((res) => {\n          console.log(\"After post_finalize:\");\n          console.log(`'res.ok' = ${res.ok}`);\n        })\n        .then(() => {\n          setRegistered(true);\n        })\n        .catch((err) => {\n          console.log(err.message);\n          setError(\"An error has occured. Contact support for help.\");\n        });\n    }\n    return () => {\n      // finalized_token.current = null;\n      // opts.current = null;\n    };\n  }, [opts, finalized_token, finalized]);\n\n  return (\n    <>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <>\n          {/* <h3>An error has occurred.</h3> */}\n          <p>{error}</p>\n        </>\n      ) : !registered ? (\n        <div>\n          <h1 className=\"row central title\">Create a password</h1>\n          <section className=\"row central\">\n            <form className=\"login\" onSubmit={handleSubmit(onSubmit)}>\n              <div>\n                <input\n                  hidden\n                  readOnly\n                  type=\"text\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={emailAddress}\n                />\n              </div>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"password\">Password</label>\n\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  autoComplete=\"new-password\"\n                  ref={register({\n                    required: \"*Password is required.\",\n                    minLength: {\n                      value: 8,\n                      message: \"*Password must be at least 8 characters.\",\n                    },\n                  })}\n                />\n                {errors.password && (\n                  <p className=\"danger\">{errors.password.message}</p>\n                )}\n              </div>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"password_repeat\">Repeat password</label>\n\n                <input\n                  type=\"password\"\n                  name=\"password_repeat\"\n                  autoComplete=\"new-password\"\n                  ref={register({\n                    validate: (value) =>\n                      value === password.current || \"*Passwords must match.\",\n                  })}\n                />\n                {errors.password_repeat && (\n                  <p className=\"danger\">{errors.password_repeat.message}</p>\n                )}\n              </div>\n              <div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Submit Password\n                </button>\n              </div>\n            </form>\n          </section>\n        </div>\n      ) : (\n        <div>\n          <h2 className=\"row central title\">Registration successful!</h2>\n          <section className=\"row central\">\n            <Link to=\"/login\">Login</Link>\n          </section>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Finalize;\n","import React, { useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport LoadingBox from \"./LoadingBox\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction Invite() {\n  const { register, handleSubmit, errors, reset } = useForm();\n  let sent = useRef(null);\n  // const [user, setUser] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  let query = new URLSearchParams(useLocation().search);\n  const token = query.get(\"token\");\n\n  const onSubmit = (data) => {\n    console.log(\"You pressed 'Send Email'.\");\n    setLoading(true);\n    let opts = {\n      username: data.email,\n      roles: data.roles,\n    };\n    console.log(token);\n    fetch(\"/api/register\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(opts),\n    })\n      .then((res) => {\n        console.log(\"Inside promise:\");\n        console.log(`'res.ok' = ${res.ok}`);\n        if (res.ok) {\n          // console.log(\"'res.status' is 201.\");\n          sent.current = opts.username;\n          console.log(`sent.current = ${sent.current}`);\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n    reset();\n  };\n\n  // useEffect(() => {\n  //   if (sent.current) {\n  //     setUser(sent.current);\n  //     sent.current = null;\n  //   }\n  //   return () => {\n  //     setUser(\"\");\n  //   };\n  // }, [sent]);\n\n  return (\n    <div>\n      <h1 className=\"row central title\">New User Invitation</h1>\n      {loading ? (\n        <LoadingBox />\n      ) : error ? (\n        <>\n          <h3>An error has occurred.</h3>\n          <p>{error}</p>\n        </>\n      ) : sent.current ? (\n        <h3>An email invitation has been sent to {sent.current}.</h3>\n      ) : (\n        <>\n          <section className=\"row central\">\n            <form className=\"login\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"email\">Email</label>\n\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  autoComplete=\"username\"\n                  ref={register({\n                    required: \"*Email is required.\",\n                    pattern: {\n                      value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                      message: \"*Email is not valid.\",\n                    },\n                  })}\n                />\n                {errors.email && (\n                  <p className=\"danger\">{errors.email.message}</p>\n                )}\n              </div>\n              <div className=\"form-div vert-control\">\n                <label htmlFor=\"roles\">Role</label>\n\n                <input\n                  type=\"text\"\n                  name=\"roles\"\n                  placeholder='\"admin\" or \"operator\"'\n                  ref={register({\n                    required: \"*Role is required.\",\n                    minLength: {\n                      value: 5,\n                      message: '*Please enter \"admin\" or \"operator\".',\n                    },\n                  })}\n                />\n                {errors.roles && (\n                  <p className=\"danger\">{errors.roles.message}</p>\n                )}\n              </div>\n              <button className=\"submit-btn\" type=\"submit\">\n                Send Email\n              </button>\n            </form>\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Invite;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\nimport { PrivateRoute } from \"./Components/PrivateRoute\";\nimport Secret from \"./Components/Secret\";\nimport Programs from \"./Components/Programs\";\nimport Repertoire from \"./Components/Repertoire\";\n// import Time from \"./Components/Time\";\nimport Venues from \"./Components/Venues\";\nimport { useAuth } from \"./auth\";\nimport Finalize from \"./Components/Finalize\";\nimport Invite from \"./Components/Invite\";\n\nfunction App() {\n  const [logged] = useAuth();\n  return (\n    <>\n      <BrowserRouter>\n        <div className=\"grid-container\">\n          <header className=\"row\">\n            <div>\n              <Link to=\"/\">\n                <h1>Opus Oakland</h1>\n              </Link>\n            </div>\n            <div>\n              <Link to=\"/programs\">Programs</Link> |{\" \"}\n              <Link to=\"/repertoire\">Repertoire</Link> |{\" \"}\n              <Link to=\"/venues\">Venues</Link> |{\" \"}\n              <Link to=\"/login\">{!logged ? <>Login</> : <>Logout</>}</Link> |{\" \"}\n              <Link to=\"/secret\">Secret</Link>\n              {/*{\" \"}\n              | <Link to=\"/time\">Time Zones</Link>*/}\n            </div>\n          </header>\n          <main>\n            <div className=\"outer\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <Route path=\"/programs\">\n                  {/* <PrivateRoute path=\"/programs\" component={Programs} /> */}\n                  <Programs />\n                </Route>\n                <Route path=\"/repertoire\">\n                  <Repertoire />\n                </Route>\n                <Route path=\"/secret\">\n                  {/* <PrivateRoute path=\"/secret\" component={Secret} /> */}\n                  <Secret />\n                </Route>\n                <Route path=\"/venues\">\n                  <Venues />\n                </Route>\n                <PrivateRoute path=\"/invite\" component={Invite} />\n                <Route>\n                  <Finalize />\n                </Route>\n                {/* <PrivateRoute path=\"/finalize\" component={Finalize} /> */}\n\n                {/* <Route path=\"/time\">\n                  <Time />\n                </Route> */}\n              </Switch>\n            </div>\n          </main>\n          <footer className=\"row central\">All Rights Reserved.</footer>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}